package com.hacker.rank.stack;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

public class MinMaxRiddleSolution {

    // Complete the riddle function below.
    static long[] riddle(long[] arr) {
    	
    	int len = arr.length;    
    	long[] a = new long[len];
        	
    	long x[][] = new long[len][len];
    	
    	for(int i=0 ; i< len; i++) {    		
    		
    		int windowsize = i+1;
    		long min = 0;
    		for(int j=0; j<=i; j++) {
    					
    		}    				    				    			
    	}    	
    	return a;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        long[] arr = new long[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            long arrItem = Long.parseLong(arrItems[i]);
            arr[i] = arrItem;
        }

        long[] res = riddle(arr);

        for (int i = 0; i < res.length; i++) {
            bufferedWriter.write(String.valueOf(res[i]));

            if (i != res.length - 1) {
                bufferedWriter.write(" ");
            }
        }

        bufferedWriter.newLine();
        bufferedWriter.close();

        scanner.close();
    }
}
