package com.thread.utility;

import java.util.concurrent.CountDownLatch;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class CountDownLatchDemo {

	public static void main(String[] args) throws InterruptedException {
		
		ExecutorService service = Executors.newFixedThreadPool(4);
		CountDownLatch latch = new CountDownLatch(3);
		
		service.submit(new DependentService(latch));
		service.submit(new DependentService(latch));
		service.submit(new DependentService(latch));
		
		latch.await();

	}
	static class DependentService implements Runnable{
		
		private CountDownLatch latch = null;
		public DependentService(CountDownLatch latch) {
			this.latch = latch;
		}
		@Override
		public void run() {
			System.out.println("Intializing the process");
			latch.countDown();
			System.out.println("Starting the process");
		}
	}
}
